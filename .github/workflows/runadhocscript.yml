# This is a basic workflow to help you get started with Actions

name: Run Adhoc Script

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      scriptName:
        description: "The name of the powershell script to run with extension"
        required: true    
        type: string
      scriptParameters:
        description: "Semi-colon delimited list of key-value-pairs to pass to the script that will be run at the end of this document. E.g. key1=value1;key2=value2"
        required: true    
        type: string
      targetAWSAccount:
        type: choice
        description: What AWS Account is the target environment in?
        required: true
        options:
        - Multiview1
        - Master1
      targetEnvironmentName:
        type: choice
        description: What environment do you want to run the script on?
        required: true    
        options: 
        - DevStaging-Windows
        - QAAuto-Windows
        - QAStaging-Windows
        - UE1-DEV-01
      codeArtifactPackageVersion:
        description: "\"latest\", or the specific version of the CodeArtifact package e.g. 1.0.21"
        required: true    
        type: string
        default: "latest"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  run-util-script:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.targetAWSAccount }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Call Bootstrap SSM Doc
      run: .\RunBootstrapSSMDoc.ps1 -vmName ${{ github.event.inputs.targetEnvironmentName }} -domainOwner ${{ vars.CODEARTIFACT_DOMAIN_OWNER }} -nameSpace ${{ vars.CODEARTIFACT_NAMESPACE }} -package ${{ vars.CODEARTIFACT_PACKAGE_NAME }} -packageVersion ${{ github.event.inputs.codeArtifactPackageVersion }} -repository ${{ vars.CODEARTIFACT_REPOSITORY }} -scriptToRun ${{ github.event.inputs.scriptName }} -delimitedScriptParameters "${{ github.event.inputs.scriptParameters }}"
      shell: pwsh    
    
  #  - name: Setup tmate session
  #  if: success() || failure()
  #  uses: mxschmitt/action-tmate@v3